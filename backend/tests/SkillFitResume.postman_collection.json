{
  "info": {
    "_postman_id": "your-collection-uuid",
    "name": "SkillFitResume API",
    "description": "API collection for SkillFitResume application with test cases",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Sign Up",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"fullName\": \"Test User\",\n    \"password\": \"Test@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has correct structure', function() {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('uid');",
                  "    pm.expect(responseJson.user).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Test@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has correct structure', function() {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "    pm.expect(responseJson).to.have.property('user');",
                  "    pm.expect(responseJson.user).to.have.property('id');",
                  "    pm.expect(responseJson.user).to.have.property('email');",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.set('authToken', pm.response.json().user.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-email?token={{verificationToken}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-email"],
              "query": [
                {
                  "key": "token",
                  "value": "{{verificationToken}}"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success message', function() {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "    pm.expect(responseJson.message).to.include('verified');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Resume",
      "item": [
        {
          "name": "Create Resume",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Software Developer Resume\",\n    \"template\": \"modern\",\n    \"sections\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/resume",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resume"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function() {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has correct structure', function() {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('title');",
                  "    pm.expect(responseJson).to.have.property('template');",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    pm.environment.set('resumeId', pm.response.json().id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Resume",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/resume/{{resumeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "resume", "{{resumeId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has correct structure', function() {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('title');",
                  "    pm.expect(responseJson).to.have.property('sections');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "LlamaParse",
      "item": [
        {
          "name": "Parse Resume",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": "/path/to/resume.pdf"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/llamaparse/parse",
              "host": ["{{baseUrl}}"],
              "path": ["api", "llamaparse", "parse"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has parsed data', function() {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('parsed_data');",
                  "    pm.expect(responseJson.parsed_data).to.be.an('object');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ]
}